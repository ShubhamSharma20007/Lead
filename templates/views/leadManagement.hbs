<!DOCTYPE html>

<html lang="en" class="light-style layout-menu-fixed layout-compact" dir="ltr" data-theme="theme-default"
  data-assets-path="/assets/" data-template="vertical-menu-template-free">

<head>
  <meta charset="utf-8" />
  <meta name="viewport"
    content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

  <title>Lead Managment</title>

  <meta name="description" content="" />

  <!-- Favicon -->
  <link rel="icon" type="image/x-icon" href="/assets/img/favicon/favicon.ico" />

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
    rel="stylesheet" />

  <link rel="stylesheet" href="/assets/vendor/fonts/boxicons.css" />

  <!-- Core CSS -->
  <link rel="stylesheet" href="/assets/vendor/css/core.css" class="template-customizer-core-css" />
  <link rel="stylesheet" href="/assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
  <link rel="stylesheet" href="/assets/css/demo.css" />

  <!-- Vendors CSS -->
  <link rel="stylesheet" href="/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
  <link rel="stylesheet" href="/assets/vendor/libs/apex-charts/apex-charts.css" />

  <!-- Page CSS -->

  <!-- Helpers -->
  <script src="/assets/vendor/js/helpers.js"></script>
  <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
  <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
  <script src="/assets/js/config.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">


  {{!-- boostrap link --}}
  <!-- CSS Files -->
  <link rel="stylesheet" href="https://unpkg.com/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
  <link rel="stylesheet"
    href="https://unpkg.com/bs-brain@2.0.3/components/contacts/contact-5/assets/css/contact-5.css" />

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Livvic:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,900&display=swap');

    input {
      border-radius: 4px;
      margin: 3px 0px;
      border: none;
      width: 100%;
      padding: 4px 8px;
      font-size: 13px;
    }

    label {
      display: block;
    }

    .save-button {
      margin-left: 7%;
      border: none;
      color: #fff;
      background-color: #696cff;
      border-color: #696cff;
      box-shadow: 0 0.125rem 0.25rem 0 rgba(105, 108, 255, 0.4);
      padding: 7px 20px;
      border-radius: 4px;
    }

    .bg-transparent {
      box-shadow: none;
    }

    .drag-container {
      position: fixed;
      left: 0;
      top: 0;
      z-index: 1000;
    }

    .board {
      position: relative;
      display: flex;
      /* Add flex display to arrange columns horizontally */
      overflow-x: auto;
      /* Add horizontal scrolling */
      width: calc(350px * 4);
      /* Adjust the width based on the number of columns */
    }

    .board-column {
      width: 350px;
      /* Set fixed width for each column */

      /* Add some space between columns */
    }


    .board-container {
      overflow-x: auto;
      /* Enable horizontal scrolling */
    }

    .board {
      position: relative;
      display: flex;
      /* Add flex display to arrange columns horizontally */
    }

    .board-column {
      width: 350px;
      /* Set fixed width for each column */

    }

    .board-column.muuri-item-releasing {
      z-index: 2;
    }

    .board-column.muuri-item-dragging {
      z-index: 3;
      cursor: move;
    }

    .board-column-container {
      position: relative;
      width: 100%;
      height: 100%;
      box-shadow: none !important;

    }

    .board-column {
      width: 280px;
    }

    .board-column-content-wrapper,
    .board-column-header {
      width: 235px !important;
    }

    .board-column-header {
      position: relative;
      height: 50px;
      line-height: 50px;
      overflow: hidden;
      padding: 0 20px;
      text-align: justify;
      color: #121212e3;
      border-radius: 5px 5px 0 0;
      font-size: 15px;
      font-weight: 600;
      letter-spacing: 0.5px;
      text-transform: uppercase;
      /*  background: #f0f0f066; */
      font-family: 'Livvic', sans-serif;
    }




    .board-column-content-wrapper {
      position: relative;
      padding: 8px;
      /*  background: #f0f0f066; */
      height: calc(100vh - 90px);
      /*   overflow-y: auto; */
      border-radius: 0 0 5px 5px;
    }

    .board-column-content {
      position: relative;
      min-height: 100%;

    }

    .board-item {
      position: relative;
      width: calc(100% - 16px);
      margin: 8px;

    }

    .board-item.muuri-item-releasing {
      z-index: 9998;
    }

    .board-item.muuri-item-dragging {
      z-index: 9999;
      cursor: move;
    }

    .board-item.muuri-item-hidden {
      z-index: 0;
    }

    .board-item-content {
      position: relative;
      border-radius: 4px;
      font-size: 17px;
      cursor: pointer;

    }

    @media (max-width: 600px) {
      .board-item-content {
        text-align: center;
      }

      .board-item-content span {
        display: none;
      }
    }

    dialog {
      width: 40%;
      min-height: 30%;
      position: absolute;
      border: 1px solid lightgray;
      border-radius: 10px;
      padding: 20px;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    .new-class {
      text-transform: capitalize;
    }

    #lableName {
      border: 1px solid rgb(185, 185, 185);
      height: 40px;
    }

    .form-control {
      height: 40px !important;
      border: 1px solid rgb(235, 233, 233);
    }

    p {
      text-transform: capitalize !important;
    }

    .board-item-content {
      min-height: 200px;
      max-height: 300px !important;
      overflow-y: scroll !important;
      font-family: "Overpass", sans-serif !important;
      background: #faebd7b5 !important;
      font-size: 0.999rem !important;
      border-radius: 8px !important;
      line-height: 1.5;
      background-image: url(https://node.scaleedge.in/assets/images/dashboard/circle.svg) !important;
      background-position: start;
      background-size: cover !important;
      background-repeat: no-repeat;
    }

    .board-item-content::-webkit-scrollbar {
      width: 0px
    }

    .slide-container::-webkit-scrollbar {

      height: 9px;
    }

    .slide-container::-webkit-scrollbar-thumb {
      background-color: #8888888f;
      border-radius: 10px;
    }

    .slide-container::-webkit-scrollbar-track {
      background-color: #f1f1f1;
      border-radius: 10px;
    }

    .plan {
      box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px !important;
      padding: 6px;
      background-color: #f0f0f066;
      color: #697e91;
      max-width: 300px;
    }

    .plan strong {
      font-weight: 600;
      color: #425275;
    }



    .plan .inner {
      align-items: center;
      padding: 6px 10px;
      border-radius: 12px;

    }

    .plan .pricing {
      position: absolute;
      top: 0;
      right: 0;
      border-radius: 99em 0 0 99em;
      display: flex;
      align-items: center;
      padding: 0.625em 0.75em;
      font-size: 1.25rem;
      font-weight: 600;
      color: #425475;
    }

    .plan .pricing small {
      color: #707a91;
      font-size: 0.75em;
      margin-left: 0.25em;
    }

    .plan .title {
      font-weight: 600;
      font-size: 1.25rem;
      color: #425675;
    }

    .plan .title+* {
      margin-top: 0.75rem;
    }

    .plan .info+* {
      margin-top: 1rem;
    }

    .plan .features {
      display: flex;
      flex-direction: column;
    }

    .plan .features li {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .plan .features li+* {
      margin-top: 0.75rem;
    }

    .plan .features .icon {
      background-color: #1FCAC5;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      color: #fff;
      border-radius: 50%;
      width: 20px;
      height: 20px;
    }

    .plan .features .icon svg {
      width: 14px;
      height: 14px;
    }

    .plan .features+* {
      margin-top: 1.25rem;
    }

    .plan .action {
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: end;
    }

    .plan .button {
      background-color: #6558d3;
      border-radius: 6px;
      color: #fff;
      font-weight: 500;
      font-size: 1.125rem;
      text-align: center;
      border: 0;
      outline: 0;
      width: 100%;
      padding: 0.625em 0.75em;
      text-decoration: none;
    }

    .plan .button:hover,
    .plan .button:focus {
      background-color: #4133B7;
    }
  </style>
  <style>
    .cookie-card {
      max-width: 320px;
      min-height: 150px;
      margin: 8px;
      padding: 0.8rem;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    }

    .title {
      font-weight: 600;
      color: rgb(31 41 55);
    }

    .description {
      margin-top: 1rem;
      font-size: 0.875rem;
      line-height: 1.25rem;
      color: rgb(75 85 99);
    }

    .description a {
      --tw-text-opacity: 1;
      color: rgb(59 130 246);
    }

    .description a:hover {
      -webkit-text-decoration-line: underline;
      text-decoration-line: underline;
    }

    .actions {
      display: flex;
      align-items: baseline;
      justify-content: space-between;
      margin-top: 1rem;
      -moz-column-gap: 1rem;
      column-gap: 1rem;
      flex-shrink: 0;
    }

    .pref {
      font-size: 0.75rem;
      line-height: 1rem;
      color: rgb(31 41 55);
      -webkit-text-decoration-line: underline;
      text-decoration-line: underline;
      transition: all .3s cubic-bezier(0.4, 0, 0.2, 1);
      border: none;
      background-color: transparent;
    }

    .pref:hover {
      color: rgb(156 163 175);
    }

    . :focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }

    .accept {
      font-size: 0.60rem;
      line-height: 1rem;
      background-color: rgb(17 24 39);
      font-weight: 500;
      border-radius: 50%;
      color: #fff;
      padding: 5px 8.5px;

      border: none;
      transition: all .15s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .accept:hover {
      background-color: rgb(55 65 81);
    }

    .accept:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }

    .details_container {
      transition: width 0.6s ease-in-out;
      width: 0%;
      display: none;

    }

    .details_container-2 {
      transition: width 0.6s ease-in-out;
      width: 0%;
      display: none;
      height: 100vh;
      overflow-y: auto;

    }

    .w-75 {
      width: 75%;
    }

    .close_side {
      padding: 9px 10px;
    }

    .borderB {
      padding-bottom: 4px;
      border-bottom: 3px solid #435971;
    }

    .contact-cards {
      position: absolute;
      top: 100%;
      right: 0;
      width: 70%;
      height: 32%;
      border-radius: 10px;
      background: white;
      justify-content: center;
      align-items: center;
      gap: 10px;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      display: none;
    }

    .paginationBtn {
      position: relative;
    }

    .paginationBtn::before {
      position: absolute;
      content: '';
      width: 0;
      height: 1.3px;
      left: 0;
      bottom: -5px;
      transition: all 0.3s ease-in-out;
      background-color: #435971;

    }

    .paginationBtn:hover::before {
      width: 100%;
    }

    /*.ri-information-2-fill:hover{
      background: orange;
    } */

    .activity_sec {
      height: 110px;
      width: 250px;
      left: -20px;
      top: -30px;
      border-radius: 10px;
      position: relative;
      box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
    }

    .activity_sec::before {
      position: absolute;
      content: '';
      border-left: 12px solid transparent;
      border-right: 12px solid transparent;
      border-top: 12px solid white;
      top: 100%;
      filter: drop-shadow(rgba(0, 0, 0, 0.15) 0px 1.95px 2.6px) drop-shadow(rgba(0, 0, 0, 0.15) 0px 1.95px 2.6px);

      left: 40px;
    }

    .activity_sec {
      display: none;
    }

    .coolinput {
      display: flex;
      flex-direction: column;
      width: fit-content;
      position: static;
      width: 90%;
      margin: 0 auto;
      margin-top: 13px;
    }

    .coolinput label.text {
      font-size: 0.75rem;
      color: #818CF8;
      font-weight: 700;
      position: relative;
      top: 0.5rem;
      margin: 0 0 0 7px;
      padding: 0 3px;

      width: fit-content;
    }

    .coolinput input[type=text].input {
      padding: 8px 10px;
      font-size: 0.75rem;
      border: 2px #818df867 solid;
      border-radius: 5px;
      background: #e8e8e8;
    }

    .coolinput input[type=text].input:focus {
      outline: none;
    }

    .btns_sec {
      margin-top: 12px !important;
      width: 90%;
      margin: 0 auto;
      display: flex;
      justify-items: start;
      align-items: center;
      gap: 10px;
    }

    .btns_sec-2 {
      margin-top: 12px;
      width: 90%;
      display: flex;
      justify-items: start;
      align-items: center;
      gap: 10px;
    }

    .sub_btn {
      font-weight: normal;
      color: white;
      border-radius: 2rem;
      cursor: pointer;
      width: 62.02px;
      height: 30.66px;
      border: none;
      background-color: #3653f8;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 0.7rem;
    }

    .sub_btn-2 {
      font-weight: normal;
      color: white;
      border-radius: 2rem;
      cursor: pointer;
      min-width: 62.02px;
      height: 30.66px;
      border: none;
      background-color: #3653f8;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 0.7rem;
    }

    .cen_btn {
      font-weight: normal;
      color: black;
      border-radius: 2rem;
      cursor: pointer;
      width: 62.02px;
      height: 30.66px;
      border: 1px solid rgb(165, 164, 164);
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 0.7rem;
    }

    .cen_btn-2 {
      font-weight: normal;
      color: black;
      border-radius: 2rem;
      cursor: pointer;
      width: 62.02px;
      height: 30.66px;
      border: 1px solid rgb(165, 164, 164);
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 0.7rem;
    }

    .activity_data {
      overflow: auto;
      min-height: 120px;
      max-height: 140px;
      z-index: 50;
      width: 220px;
      top: 50px;
      left: 100px;
      border-radius: 10px;
      position: absolute;
      background-color: white;
      box-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.05) 0px 8px 32px;
      display: none;

    }

    .acti-name {
      white-space: nowrap;
      overflow-x: auto;
      /* margin-bottom: 8px; */
      /* padding: 8px 0; */

    }

    .acti-name::-webkit-scrollbar {
      height: 5px;
    }

    .line {
      width: 98%;
      margin: 0 auto;
      height: 1px;
      margin-top: 9px;
      background-color: lightgray;
    }
  </style>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    }

    html,
    body {
      height: 100%;
      width: 100%;
    }

    form {
      padding: 10px 0;
    }

    #form1 {

      width: 100%;
      background-color: #FFFFFF;
      padding: 20px;
      box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;

      border-radius: 10px;
    }

    #form-top {
      display: flex;
      justify-content: space-between;
      border-bottom: 1px solid #dcdada;
      padding-bottom: 10px;
    }

    #form-top h6 {
      font-size: 11px;
      text-transform: uppercase;
      color: #525c69;
      font-weight: 600;
    }

    #form-top h6 i {
      color: #c1c1c1;
      font-size: 12px;
    }

    #form-top p {
      font-size: 11px;
      color: #525c69;
    }

    .elem {
      padding: 5px 0px;
    }

    .elem label {
      display: block;
      font-size: 12px;
      color: #c1c1c1;
      padding: 3px 0px;
    }

    .elem input {
      width: 100%;
      padding: 10px 8px;
      border: 1px solid #c1c1c1;
      border-radius: 2px;
    }

    #name::placeholder {
      color: #c1c1c1;
    }

    .ri-settings-5-line {
      font-size: 15px;
      color: #525c69;
    }

    #amount-currency {
      display: flex;
      align-items: center;

    }

    #amount-currency input {
      width: 100%;
      margin-right: 10px;
    }

    #amount-currency select {
      width: 100%;
      padding: 10px 8px;
      border: 1px solid #c1c1c1;
      border-radius: 2px;
      margin-right: 10px;
    }

    #amount-currency option {
      width: 40px;
    }

    #amount-currency i {
      padding-right: 5px;
    }

    .end-date input {
      width: 100%;
    }

    .end-date i {
      float: right;
      padding-right: 5px;
      margin-top: 10px;
    }

    #client {
      border: 1px solid #c1c1c1;
      padding: 10px 20px;
      width: 100%;
      margin-right: 5px;
    }

    .client-details {
      position: relative;
    }

    .client-details label {
      display: block;
      font-size: 12px;
      color: #c1c1c1;
      padding: 3px 0px;
    }

    .contact-input input {
      width: 96%;
      padding: 10px 36px;
      border: 1px solid #c1c1c1;
      border-radius: 2px;
    }

    .client-details-1 {
      position: relative;
    }

    .client-details-1 label {
      display: block;
      font-size: 12px;
      color: #c1c1c1;
      padding: 3px 0px;
    }

    .contact-input-1 input {
      width: 100%;
      padding: 10px 36px;
      border: 1px solid #c1c1c1;
      border-radius: 2px;
    }

    .ri-user-fill {
      background-color: #A6AAAF;
      color: #FFFFFF;
      padding: 7px;
      border-radius: 50%;
      font-size: 10px;
      position: absolute;
      left: 7px;
      top: 30px;
    }

    .ri-search-line {
      color: #A6AAAF;
      padding: 7px;
      border-radius: 50%;
      font-size: 17px;
      font-weight: 600;
      position: absolute;
      right: 25px;
      top: 25px;
    }

    .ri-building-line {
      background-color: #A6AAAF;
      color: #FFFFFF;
      padding: 7px;
      border-radius: 50%;
      font-size: 10px;
      position: absolute;
      left: 7px;
      top: 30px;
    }

    #add {
      margin-top: 25px;
      margin-bottom: 15px;
    }

    .add-participant {
      border: none;
      background-color: transparent;
      border-bottom: 1px dotted #c1c1c1;
      font-size: 14px;
      color: #c1c1c1;
      padding: 3px 0px;
    }

    .ri-add-line {
      font-size: 14px;
      color: #c1c1c1;
    }

    .ri-close-line {
      font-size: 14px;
      color: #c1c1c1;
      opacity: 0;
    }

    @media(max-width:600px) {
      #form1 {
        height: 70%;
        width: 100%;
        background-color: #FFFFFF;
        padding: 10px;
        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
      }

      .elem input {
        width: 100%;
      }

      textarea {
        width: 100%;
      }

      .contact-input input {
        width: 100%;
      }

      .settings-5 {
        margin: 24px 3px !important;
      }
    }

    @media(max-width:1000px) {
      #form1 {
        width: 70%;
      }

      textarea {
        width: 100%;
      }
    }

    .elem select {
      width: 100%;
      padding: 10px 8px;
      border: 1px solid #c1c1c1;
      border-radius: 2px;
      margin-right: 7px;
    }

    .elem textarea {
      border: 1px solid #c1c1c1;
      border-radius: 2px;
      margin-right: 8px;
    }

    .elem-checkbox {
      display: flex;
      justify-content: space-between;
      margin-right: 4.8px;
      margin-top: 30px;
    }

    .elem-checkbox label {
      font-size: 12px;
      color: #c1c1c1;
      padding: 3px 0px;
    }

    #Responsible {
      width: 100%;
    }

    .bxhtmled-top-bar-btn {
      border-right: 1px solid #c1c1c1;
      padding-right: 10px;
    }

    .ri-git-repository-private-fill {
      position: absolute;
      right: 10px;
      top: 35px;
      color: #2fc6f6;
    }

    .main_div {
      display: flex;
      justify-content: space-between;

    }

    .right-form {
      width: 45%;
    }

    .outter-section {
      width: 100%;
      position: relative;
      padding: 10px;
    }

    .inner-section {
      background: white;
      border-radius: 10px;
    }

    .inner-section h5 {
      padding: 10px 0;
      border-bottom: 1px solid lightgray;
    }

    #datetime-local {
      outline: none;
      border: none;
    }

    .calendar-icon {
      background-color: #c1c1c1;
      border-radius: 50%;
      padding: 4px 8px;
      font-size: 12px;
      color: white;
      left: -15px;
      top: -15px;

    }

    .positions {
      position: absolute;
      color: #697A8D;
      left: -15px;
      top: -20px;
    }

    .outter-section,
    .activity-dets-section {
      border: 1px solid rgba(211, 211, 211, 0.416);
    }

    .staright-line {
      width: 100%;
      background: lightgray;
      height: 1px;
      margin: 3vw 0;
    }

    .ri-checkbox-circle-line {
      font-size: 14px;
    }

    .lead_contact {
      max-height: 150px;
      width: 96%;
      top: 100%;
      left: 0;
      background: white;
      overflow-y: auto;
      border-radius: 5px;
    }





    .c-button {

      border-radius: 45px;
      font-size: 12px;
      margin: 10px;
      padding: 11px 0px 11px 0px;
      position: relative;
      left: 50%;
      transform: translateX(-52%);
      cursor: pointer;
    }

    .c-button .c-main {
      border-radius: 45px;
      padding: 11px 25px 11px 2px;
      transition: all 0.5s ease-in-out;
      border: 1px solid transparent;
    }

    .c-ico .c-blur {
      border-radius: 100%;
      margin-left: 0;
      padding: 8px 23px;
      filter: blur(1px);
      text-align: center;
    }

    .c-ico {
      position: relative;
      margin-right: 20px;
    }

    .c-ico .ico-text {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      font-size: 14px;
    }
  </style>
</head>

<body>
  {{!-- activity side dialog --}}

  <div class="details_container-2 position-absolute bg-white end-0 border" style="z-index: 1100;min-height: 120vh">
    <div class="w-full h-full p-4">
      <div class="w-full mb-4 mt-2 d-flex justify-content-between align-content-center">
        <h1>New Lead</h1>
        <div>
          <i
          class="ri-close-large-line ri-close-large-line-2 bg-black text-white close_side rounded-circle d-inline-block  h5 "></i>
        </div>
      </div>

      <div class="main_div">
        <form id="myForm" class="w-50 p-0">
          <div id="form1">
            <div id="form-top">
              <h6>About Deal &nbsp;<i class="ri-pencil-fill"></i></h6>
              <p>cancel</p>
            </div>
            <div id="form-center">
              <div class="elem">
                <label for="name">Company Name</label>
                <input type="text" placeholder="Company...." name="companyName" required>
              </div>
              <div class="elem">
                <label for="name">Stage</label>
                <select name="Stage" id="Stage" required>
                  <option value="" disabled selected>Select Stage</option>
                  <option value="Follow Up Lead">Follow Up Lead</option>
                  <option value="In Progess">In Progess</option>
                  <option value="Advance Stage">Advance Stage</option>
                  <option value="Close Lead Won">Close Lead Won</option>

                </select>
              </div>
              <div class="elem">
                <label for="name">Amount and currency</label>
                <div id="amount-currency">
                  <input type="text" value="0.00" name="Amount" id="Amount" >
                  <select>
                    <option value="indian-rupee">Indian Rupee</option>
                    <option value="us-dollar">US Dollar</option>

                  </select>

                </div>
              </div>
              <div class="elem end-date">
                <label for="name">End date</label>
                <input type="date" name="EndDate" id="end-date">
              </div>

              <div style="display: flex; margin-top: 40px;">
                <div id="client">
                  <div class="client-details position-relative">
                    <label for="">Contact</label>
                    <div class="contact-input">
                      <i class="ri-user-fill"></i>
                    <input type="text" id="contact_input" name="ContactNumber" autocomplete="one-time-code"
                        placeholder="Contact name,phone or email" required>
                      <i class="ri-search-line"></i>
                      <i class="ri-close-line"></i>

                      {{!-- dynamically contact data --}}
                      <div class="position-absolute  lead_contact">

                      </div>

                    </div>

                  </div>


                </div>
              </div>

            </div>
          </div>

          <div id="form1" class="mt-3">

            <div id="form-center">
              <div class="elem">
                <label for="name">Deal type</label>
                <select name="DealType" id="deal-type" required>
                  <option value="" selected disabled>Select Deal Type..</option>
                  <option value="Sales">Sales</option>
                  <option value="Services">Services</option>
                  <option value="After Sales Service">After Sales Service</option>
                </select>
              </div>

              <div class="elem">
                <label for="name">Source</label>
                <select name="Source" id="Source" required>
                  <option value="">Not selected</option>
                  <option value="call">Call</option>
                  <option value="email">E-Mail</option>
                  <option value="website">Website</option>
                  <option value="advertising">Advertising</option>
                  <option value="existing-client">Existing Client</option>
                  <option value="recommendation">By Recommendation</option>
                  <option value="show-exhibition">Show/Exhibition</option>
                  <option value="crm-form">CRM form</option>
                  <option value="callback">Callback</option>
                  <option value="sales-boost">Sales boost</option>
                  <option value="online-store">Online Store</option>
                  <option value="other">Other</option>

                </select>
              </div>





              <div style="display: flex; margin-top: 8px; position: relative;">
                <div id="Responsible">
                  <div class="client-details-1">
                    <label for="">Responsible</label>
                    <div class="contact-input">
                      <i class="ri-user-fill"></i>
                      <input type="text" name="responsible_person" value="{{username}}">
                      <i class="ri-search-line"></i>
                    </div>
                  </div>
                </div>
              </div>


            </div>
          </div>
          <button type="submit" class="btn btn-primary" id="submit_btn">Submit</button>

        </form>
        <div class="right-form ">
          <div class="outter-section   rounded-2 position-relative ">
            <i class="ri-chat-smile-2-fill positions position-absolute " style="font-size: 34px;"></i>
            <div class="inner-section m-2 ">
              <h5>Activity</h5>
              <div class="mb-3">

                <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" cols="4"
                  style="min-height: 100px;"></textarea>
              </div>
              <div class="calendar d-flex align-items-center gap-3">

                <i class="ri-calendar-line"></i>
                <input type="datetime-local" value="" name="" id="datetime-local" class="w-50 " placeholder="enter">
              </div>
              <div class="btns_sec-2">
                <button class="sub_btn-2 text-capitalize ">
                  Submit
                </button>
                <button type="reset" class="cen_btn-2  text-capitalize">
                  Cancel
                </button>
              </div>
            </div>
          </div>
          {{!-- activity details card --}}
          <div class="staright-line"></div>
          <div class="activity-dets-section   rounded-2 position-relative ">
            <i class="ri-checkbox-circle-fill positions  " style="font-size: 34px;"></i>
            <div class="p-2 px-3 ">
              <div class="times_sec d-flex justify-content-between align-items-center  mt-2  ">
                <div class="d-flex align-items-center gap-3">
                  <p class="m-0">Activity completed</p>
                  <p class="m-0">1:41 pm</p>
                </div>
                <i class="ri-account-circle-fill" style="font-size: 28px;"></i>
              </div>
              <div class="deadline_part d-flex align-items-center gap-4">
                <small>Deadline</small>
                <small>Tue, Apr 9, 11:00 am</small>
              </div>
              <div class="mb-3 mt-2">
                <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" cols="4"
                  style="min-height: 100px;"></textarea>
              </div>
              <div class="btns_sec-2">
                <button class="sub_btn-2 px-2  text-capitalize">
                  Completed
                </button>
                <button type="reset" class="cen_btn-2 text-capitalize px-2 ">
                  postpone
                </button>
              </div>
            </div>
          </div>

        </div>

      </div>





    </div>
  </div>



  <div class="details_container position-absolute bg-white end-0 border" style="z-index: 1100;min-height: 120vh">
     <div class="w-full h-full p-4">
      <div class="w-full mb-4 mt-2 d-flex justify-content-between align-content-center">
        <h1>Update Lead</h1>
        <div>
          <i
          class="ri-close-large-line ri-close-large-line-1 bg-black text-white close_side rounded-circle d-inline-block  h5 "></i>
        </div>
      </div>

      <div class="main_div">
        <form id="myForm" class="w-50 p-0">
          <div id="form1">
            <div id="form-top">
              <h6>About Deal &nbsp;<i class="ri-pencil-fill"></i></h6>
              <p>cancel</p>
            </div>
            <div id="form-center">
              <div class="elem">
                <label for="name">Company Name</label>
                <input type="text" placeholder="Company...." name="companyName" required>
              </div>
              <div class="elem">
                <label for="name">Stage</label>
                <select name="Stage" id="Stage" required>
                  <option value="" disabled selected>Select Stage</option>
                  <option value="Follow Up Lead">Follow Up Lead</option>
                  <option value="In Progess">In Progess</option>
                  <option value="Advance Stage">Advance Stage</option>
                  <option value="Close Lead Won">Close Lead Won</option>

                </select>
              </div>
              <div class="elem">
                <label for="name">Amount and currency</label>
                <div id="amount-currency">
                  <input type="text" value="0.00" name="Amount" id="Amount" >
                  <select>
                    <option value="indian-rupee">Indian Rupee</option>
                    <option value="us-dollar">US Dollar</option>

                  </select>

                </div>
              </div>
              <div class="elem end-date">
                <label for="name">End date</label>
                <input type="date" name="EndDate" id="end-date">
              </div>

              <div style="display: flex; margin-top: 40px;">
                <div id="client">
                  <div class="client-details position-relative">
                    <label for="">Contact</label>
                    <div class="contact-input">
                      <i class="ri-user-fill"></i>
                    <input type="text" id="contact_input" name="ContactNumber" autocomplete="one-time-code"
                        placeholder="Contact name,phone or email" required>
                      <i class="ri-search-line"></i>
                      <i class="ri-close-line"></i>

                      {{!-- dynamically contact data --}}
                      <div class="position-absolute  lead_contact">

                      </div>

                    </div>

                  </div>


                </div>
              </div>

            </div>
          </div>

          <div id="form1" class="mt-3">

            <div id="form-center">
              <div class="elem">
                <label for="name">Deal type</label>
                <select name="DealType" id="deal-type" required>
                  <option value="" selected disabled>Select Deal Type..</option>
                  <option value="Sales">Sales</option>
                  <option value="Services">Services</option>
                  <option value="After Sales Service">After Sales Service</option>
                </select>
              </div>

              <div class="elem">
                <label for="name">Source</label>
                <select name="Source" id="Source" required>
                  <option value="">Not selected</option>
                  <option value="call">Call</option>
                  <option value="email">E-Mail</option>
                  <option value="website">Website</option>
                  <option value="advertising">Advertising</option>
                  <option value="existing-client">Existing Client</option>
                  <option value="recommendation">By Recommendation</option>
                  <option value="show-exhibition">Show/Exhibition</option>
                  <option value="crm-form">CRM form</option>
                  <option value="callback">Callback</option>
                  <option value="sales-boost">Sales boost</option>
                  <option value="online-store">Online Store</option>
                  <option value="other">Other</option>

                </select>
              </div>





              <div style="display: flex; margin-top: 8px; position: relative;">
                <div id="Responsible">
                  <div class="client-details-1">
                    <label for="">Responsible</label>
                    <div class="contact-input">
                      <i class="ri-user-fill"></i>
                      <input type="text" name="responsible_person" value="{{username}}">
                      <i class="ri-search-line"></i>
                    </div>
                  </div>
                </div>
              </div>


            </div>
          </div>
          <button type="submit" class="btn btn-primary" id="submit_btn">Submit</button>

        </form>
        <div class="right-form ">
          <div class="outter-section   rounded-2 position-relative ">
            <i class="ri-chat-smile-2-fill positions position-absolute " style="font-size: 34px;"></i>
            <div class="inner-section m-2 ">
              <h5>Activity</h5>
              <div class="mb-3">

                <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" cols="4"
                  style="min-height: 100px;"></textarea>
              </div>
              <div class="calendar d-flex align-items-center gap-3">

                <i class="ri-calendar-line"></i>
                <input type="datetime-local" value="" name="" id="datetime-local" class="w-50 " placeholder="enter">
              </div>
              <div class="btns_sec-2">
                <button class="sub_btn-2 text-capitalize ">
                  Submit
                </button>
                <button type="reset" class="cen_btn-2  text-capitalize">
                  Cancel
                </button>
              </div>
            </div>
          </div>
          {{!-- activity details card --}}
          <div class="staright-line"></div>
          <div class="activity-dets-section   rounded-2 position-relative ">
            <i class="ri-checkbox-circle-fill positions  " style="font-size: 34px;"></i>
            <div class="p-2 px-3 ">
              <div class="times_sec d-flex justify-content-between align-items-center  mt-2  ">
                <div class="d-flex align-items-center gap-3">
                  <p class="m-0">Activity completed</p>
                  <p class="m-0">1:41 pm</p>
                </div>
                <i class="ri-account-circle-fill" style="font-size: 28px;"></i>
              </div>
              <div class="deadline_part d-flex align-items-center gap-4">
                <small>Deadline</small>
                <small>Tue, Apr 9, 11:00 am</small>
              </div>
              <div class="mb-3 mt-2">
                <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" cols="4"
                  style="min-height: 100px;"></textarea>
              </div>
              <div class="btns_sec-2">
                <button class="sub_btn-2 px-2  text-capitalize">
                  Completed
                </button>
                <button type="reset" class="cen_btn-2 text-capitalize px-2 ">
                  postpone
                </button>
              </div>
            </div>
          </div>

        </div>

      </div>





    </div>
    </div>
  </div>


  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
      <!-- Menu -->

      {{>Sidebar}}
      <!-- / Menu -->

      <!-- Layout container -->
      <div class="layout-page">
        {{!-- side container --}}


        <!-- Navbar -->


        {{>navBar}}
        <!-- / Navbar -->

        <!-- Content wrapper -->
        <div class="content-wrapper">


          <!-- Content -->
          <div class="container-xxl flex-grow-1 container-p-y ">
            <div class="d-flex align-items-center gap-4 px-4 py-3 mb-3 rounded-pill "
              style="width: fit-content; background-color: #f0f0f066">
              <h6 class="text-capitalize m-0 paginationBtn cursor-pointer">dashboard</h6>
              <h6 class="text-capitalize m-0 paginationBtn cursor-pointer">listing</h6>
            </div>


            <div class="row first_cnt">
              <div class="col-lg-12">
                <div class=" bg-transparent box-shadow-none border-0">
                  <div class="drag-container"></div>
                  <div class="board-container">
                    <div class="d-flex slide-container position-relative rounded-2"
                      style="overflow-x: auto; width:100%; height:100%;">


                    </div>
                  </div>
                </div>

              </div>
            </div>
            <div class="row second_cnt d-none">
              <h1>Container2</h1>
            </div>
          </div>
          <!-- / Content -->
          <!-- Footer -->
          {{!-- {{>footer}} --}}
          <!-- / Footer -->

          <div class="content-backdrop fade"></div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->
    </div>

    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
  </div>


</body>

<script>
  document.addEventListener('click', function (event) {
    if (event.target.classList.contains('ri-file-add-line')) {
      var infoParagraphs = document.querySelectorAll('.board-item-content .info');

      infoParagraphs.forEach(function (paragraph) {
        var labelText = paragraph.textContent.split(':')[0].trim();
        var valueText = paragraph.textContent.split(':')[1].trim();

        var labelElement = document.createElement('label');
        labelElement.textContent = labelText;

        var inputElement = document.createElement('input');
        inputElement.name = labelText.replace(/\s/g, '_');
        inputElement.id = labelText.replace(/\s/g, '_').toLowerCase();
        inputElement.value = valueText;

        paragraph.parentNode.replaceChild(labelElement, paragraph);
        labelElement.parentNode.insertBefore(inputElement, labelElement.nextSibling);
      });

      var saveButton = document.createElement('button');
      saveButton.textContent = 'Save';
      saveButton.classList.add('save-button');

      var container = document.querySelector('.board-column-content');
      container.appendChild(saveButton);
    }
  });

  document.addEventListener('click', async function (event) {
    if (event.target.classList.contains('save-button')) {
      var inputFields = document.querySelectorAll('.board-item-content input');
      var leadId = event.target.closest('.board-item').getAttribute('data-lead-id');
      var updatedData = {};

      inputFields.forEach(function (input) {
        var label = input.previousSibling.textContent.split(':')[0].trim();
        updatedData[label] = input.value;
      });

      try {
        const response = await fetch('/update-dataLead', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            Id: leadId,
            ...updatedData
          })
        });

        if (response.ok) {
          inputFields.forEach(function (input) {
            var paragraph = document.createElement('p');
            paragraph.textContent = input.previousSibling.textContent + ': ' + input.value;
            paragraph.classList.add('info');
            input.parentNode.replaceChild(paragraph, input);
          });
          event.target.remove();
          alert('Lead details updated successfully');
        } else {
          alert('Failed to update lead details');
        }
      } catch (error) {
        console.error('Error updating lead details:', error);
        alert('Internal Server Error');
      }
    }
  });
</script>

<script>
  /*side container 2 */
  var flags = false
  const sideopenbtn = document.querySelector('.cssbuttons-io-button')
  sideopenbtn.addEventListener('click', () => {
    const details_container = document.querySelector('.details_container-2');
    if (flags) {
      details_container.style.width = '0';
      details_container.style.display = 'none';
      flags = false
    }
    else {
      details_container.style.width = '75%';
      details_container.style.display = 'block';
      flags = true
    }

  })

  const close_large_btn2 = document.querySelector('.ri-close-large-line-2');
  if (close_large_btn2) {
    close_large_btn2.addEventListener('click', () => {
      const details_container2 = document.querySelector('.details_container-2');
      if (details_container2) {
        details_container2.style.width = '0';
        setTimeout(() => {
          details_container2.style.display = 'none';
        }, 550);
      }
    });
  }


</script>




<script>


  document.addEventListener('click', (event) => {
    const target = event.target;
    if (target.matches('.cookie-card span')) {
      const details_container = document.querySelector('.details_container');
      if (details_container) {
        details_container.style.width = '75%';
        details_container.style.display = 'block';
      }
    }
  });

  const close_large_btn = document.querySelector('.ri-close-large-line-1');
  if (close_large_btn) {
    close_large_btn.addEventListener('click', () => {
      const details_container = document.querySelector('.details_container');
      if (details_container) {
        details_container.style.width = '0';
        setTimeout(() => {
          details_container.style.display = 'none';
        }, 550);
      }
    });
  }
</script>



<script>
  /* open the tabs on click */
  const tabs_heading = document.querySelector('.tabs_heading')
  tabs_heading.addEventListener('click', (event) => {
    if (event.target.tagName === "H5") {
      const index = Array.from(event.target.parentElement.children).indexOf(event.target)
      const tabs = event.target.parentElement.children

      const datacontainer = document.querySelectorAll('.data-container')
      datacontainer.forEach((item, i) => {
        item.classList.toggle("d-none", i !== index)
        item.classList.toggle("d-block", i === index)
        tabs[i].classList.toggle("borderB", index === i)
      })

    }
  })
</script>

<script>
  function showLeadData(element) {
    const id = element.parentElement.parentElement.getAttribute('data-lead-id');
    fetch(`/lead-store-data/${id}`)
      .then(res => res.json())
      .then(data => {
        appendDataToLeadForm(data.storeval)

      })
      .catch(err => console.log(err))

  }

  function appendDataToLeadForm(data) {
    console.log(data)
    const leadname = document.getElementById('leadname')
    const companyname = document.getElementById('companyname')
    const leademail = document.getElementById('email')
    const leadphone = document.getElementById('phone')
    const leadstatus = document.getElementById('leadstatus')
    const leadmessage = document.getElementById('message')
    leadname.value = data.ClientName
    companyname.value = data.companyName
    leademail.value = data.email
    leadphone.value = data.contactNumber
    leadstatus.value = data.DealType

  }
</script>

<script>
  /* pagination btn script*/
  const paginationBtn = document.querySelectorAll(".paginationBtn")
  const first_cnt = document.querySelector(".first_cnt")
  const second_cnt = document.querySelector(".second_cnt")
  paginationBtn.forEach(btn => {
    btn.addEventListener('click', (e) => {
      if (e.target.tagName === "H6") {
        const index = Array.from(e.target.parentElement.children).indexOf(e.target)
        first_cnt.classList.toggle("d-none", index === 1)
        second_cnt.classList.toggle("d-none", index === 0)
      }
    })
  })
</script>



{{!--
<script>
  document.addEventListener('DOMContentLoaded', function () {
    PostData();
  });

  function PostData() {
    const sub_btn = document.querySelectorAll('.sub_btn');
    sub_btn.forEach((ele, i) => {
      ele.addEventListener('click', () => {
        const activityInputs = document.querySelectorAll('.activity');
        const leadIdInputs = document.querySelectorAll('[name="lead_id"]');
        const postData = [];

        activityInputs.forEach((input, index) => {
          postData.push({
            lead_id: leadIdInputs[index].value,
            activity: input.value
          });
        });

        fetch('/activity', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(postData)
        })
          .then(response => response.json())
          .then(data => console.log(data))
          .catch(error => console.error('Error:', error));
      });
    });
  }
</script> --}}


<script>
  function getDateTime() {
    var now = new Date();
    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
    document.getElementById('datetime-local').value = now.toISOString().slice(0, 16);
  }

  window.onload = function () {
    getDateTime();
  };
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const addButton = document.querySelector('.add-participant');
    const clientContainer = document.getElementById('client');

    // Event listener for adding participant
    addButton.addEventListener('click', function (event) {
      event.preventDefault(); // Prevent default form submission behavior
      const clone = clientContainer.querySelector('.client-details').cloneNode(true);
      const closeIcon = clone.querySelector('.ri-close-line');
      closeIcon.style.opacity = '1'; // Display close icon
      clientContainer.insertBefore(clone, document.getElementById('add'));
    });

    // Event listener for removing participant
    clientContainer.addEventListener('click', function (event) {
      const target = event.target;
      if (target && target.classList.contains('ri-close-line')) {
        const participantToRemove = target.closest('.client-details');
        participantToRemove.remove();
      }
    });
  });
</script>
<script>
  const contact_input = document.querySelector('#contact_input')
  contact_input.addEventListener('input', async (e) => {
    const storevalue = e.target.value;
    if (!storevalue.trim()) { // Check if input value is empty or only contains whitespace
      const lead_contact = document.querySelector('.lead_contact')
      lead_contact.innerHTML = ` `;
      return;
    }
    await appendingData(storevalue)
  })

  async function appendingData(value) {
    try {
      const res = await fetch('/filter-contact', {
        method: "POST",
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          contact: value
        })
      });
      const data = await res.json();
      const lead_contact = document.querySelector('.lead_contact')
      lead_contact.innerHTML = '';
      if (data.success) {
        if (data.alldata.length === 0 && data.contactdata.length === 0) {
          const card = document.createElement('div');
          card.classList.add('card');
          card.innerHTML = `
            <button type="button" class="c-button border-0 add-contact-btn">
              <span class="c-main">
                <span class="c-ico"><span class="c-blur"></span> <span class="ico-text">+</span></span>
                Add to contact
              </span>
            </button>
          `;
          lead_contact.appendChild(card);

          // Add event listener to handle click on "Add to contact" button
          const addContactBtn = card.querySelector('.add-contact-btn');
          addContactBtn.addEventListener('click', () => {
            // Create the form
            const form = document.createElement('form');
            form.innerHTML = `
              <input type="text" name="name" placeholder="Name">
              <input type="email" name="email" placeholder="Email">
              <input type="tel" name="mobile" placeholder="Mobile">
              <input type="text" name="address" placeholder="address">
              <button type="submit">Submit</button>
            `;

            // Append the form to the card
            card.innerHTML = '';
            card.appendChild(form);

            // Add styling to the form
            const style = document.createElement('style');
            style.textContent = `
              /* Form styles */
              form {
                display: flex;
                flex-direction: column;
                gap: 10px;
                padding: 10px;
                background-color: #f4f4f4;
                border-radius: 5px;
              }

              input[type="text"],
              input[type="email"],
              input[type="tel"],
              button {
                padding: 8px;
                border: 1px solid #ccc;
                border-radius: 3px;
                font-size: 14px;
                outline: none;
              }

              input[type="text"],
              input[type="email"],
              input[type="tel"] {
                width: 100%;
              }

              button {
                background-color: #007bff;
                color: #fff;
                cursor: pointer;
                transition: background-color 0.3s;
              }

              button:hover {
                background-color: #0056b3;
              }
            `;
            document.head.appendChild(style);

            // Add event listener to handle form submission
            form.addEventListener('submit', async (e) => {
              e.preventDefault();
              const formData = new FormData(form);
              const formDataObj = Object.fromEntries(formData.entries());

              try {
                const res = await fetch('/contactData', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify(formDataObj),
                });
                const data = await res.json();
                console.log('Contact data response:', data);
                form.reset();
                toastr.success('Contact created successfully');

                // You can update the UI or perform any other actions based on the server response
              } catch (err) {
                console.error(err);
                // Handle any errors that occur during the fetch request
                toastr.error('Failed to create contact data');

              }
            });
          });
        } else {
          data.alldata.forEach(ele => {

            const card = document.createElement('div');
            card.classList.add('card');
            card.innerHTML = `
  <div class="wrapper d-flex gap-3 px-3 py-2 mx-auto my-1 border rounded-2 align-items-center" style="width: 80%" onclick='getcontactnum("${ele.ContactNumber}")'>
    <div class="img-no">
      <img class="rounded-circle" style="background-color: lightgray;" src="https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png" alt="" width="40" height="40">
    </div>
    <div class="div">
      <small class="m-0 d-block">${ele.companyName}</small>
      <small class="m-0 d-block">${ele.ContactNumber}</small>
    </div>
  </div>
`;

            lead_contact.appendChild(card);
          });
          data.contactdata.forEach(ele => {
            const card = document.createElement('div');
            card.classList.add('card');
            card.innerHTML = `
              <div class="wrapper d-flex gap-3 px-3 py-2 mx-auto my-1 border rounded-2 align-items-center" style="width: 80%;" onclick='getcontactnum("${ele.mobile}")'>
                <div class="img-no">
                  <img class="rounded-circle" style="background-color: lightgray;"
                    src="https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png" alt=""
                    width="40" height="40">
                </div>
                <div class="div">
                  <small class="m-0 d-block">${ele.name}</small>
                  <small class="m-0 d-block">${ele.mobile}</small>
                </div>
              </div>
            `;
            lead_contact.appendChild(card);
          });
        }
      }



    } catch (err) {
      console.error(err);
    }
  }

  function getcontactnum(number) {
    document.querySelector('#contact_input').value = number
    
    
  

  }




</script>


<script>
  document.getElementById('myForm').addEventListener('submit', async function (event) {
    event.preventDefault();
    const formData = new FormData(this);
    const obj = Object.fromEntries(formData);

    try {
      const response = await fetch('/leads', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(obj)
      });

      const data = await response.json();
      console.log(data);

      // Show toastr message
      toastr.success('Lead data added successfully');

      // Reset the form
      this.reset();
    } catch (error) {
      console.error('Error:', error);
      // Show toastr message for error
      toastr.error('Failed to add lead data');
    }
  });
</script>




<script src="scripts/leadmanagement.js"></script>
<script src="/assets/js/main.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

</html>